import psi4
import numpy as np

basis {
assign H1 test1
assign H2 test2
assign H3 test3
assign H4 test4
[ test1 ]
cartesian
****
H     0
S   1   1.00
      0.20000000000      1.0000000000
P   1   1.00
      0.20000000000      1.0000000000
****
[ test2 ]
cartesian
****
H     0
S   1   1.00
      0.30000000000      1.0000000000
P   1   1.00
      0.30000000000      1.0000000000
****
[ test3 ]
cartesian
****
H     0
S   1   1.00
      0.40000000000      1.0000000000
P   1   1.00
      0.40000000000      1.0000000000
****
[ test4 ]
cartesian
****
H     0
S   1   1.00
      0.50000000000      1.0000000000
P   1   1.00
      0.50000000000      1.0000000000
****
}

molecule h2o {
symmetry c1
units bohr
0 1
H1       -0.4939594255     -0.2251760374      0.3240754142                 
H2        0.4211401526      1.8106751596     -0.1734137286                 
H3       -0.5304044183      1.5987236612      2.0935583523                 
H4        1.9190079941      0.0838367286      1.4064021040                 
}

set scf_type pk
set puream false
set e_convergence 10
set d_convergence 10
e, wfn = energy('hf', return_wfn=True)

mol = wfn.molecule()
bs = wfn.basisset()
basis = psi4.core.BasisSet.build(mol)
mints = psi4.core.MintsHelper(basis)

print("Normalization constant atom 1 S", basis.shell(0).coef(0))
print("Normalization constant atom 1 P", basis.shell(1).coef(0))

print("Normalization constant atom 2 S", basis.shell(2).coef(0))
print("Normalization constant atom 2 P", basis.shell(3).coef(0))

print("Normalization constant atom 3 S", basis.shell(4).coef(0))
print("Normalization constant atom 3 P", basis.shell(5).coef(0))

print("Normalization constant atom 4 S", basis.shell(6).coef(0))
print("Normalization constant atom 4 P", basis.shell(7).coef(0))

G = mints.ao_eri()
G = np.asarray(G)
print(G.shape)
print(G[1,4,8,12])


